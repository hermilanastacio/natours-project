/*clearfix will append a pseudo elem after the elem wich will then clear these floats.*/
/******** CUSTOMIZED EFFECTS ********/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

/*simple reset using universal selector*/
/*This will select each and every element on the page and apply the decalarations here*/
*,
*::after,
*::before {
  /*This will be also applied in pseudo-class*/
  /*because by default, browser apply margins and padding*/
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*This will forcely inherit the box sizing we declared in the body*/ }

/*rem unit always related to the root font-size*/
/*rem is very useful because when you change this value, it will affect the whole website and best for responsive website*/
html {
  font-size: 62.5%;
  /*We do this because the default size of browser's font is 16px, and we want it to be divisible by 10px (10px/16px = 0.625 or 62.5%)*/
  /*So if the user change their font size in the browser, your website sizes will be change as well*/ }

body {
  box-sizing: border-box;
  /*This will change the box model so that the borders and the paddings are no longer added to the total width or the total height*/ }

body {
  /*body is the parent element of all the elements and it will be inherited*/
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*this is some hack to fix little shaking in animation*/
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /*This is the application of the animation we made*/
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*animation-iteration-count: 3;*/
    /*how many times animation will happen*/
    /*animation-delay: 3s;*/
    /*countdown before animation will start*/ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /*shortcut on applying the animation*/
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  /*This is very vital in transform attrib*/
  /*THIS IS THE GRADIENT TEXT EFFECT*/
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

/*This is just a utility class which is to center the text*/
.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-top-big {
  margin-top: 8rem; }

.u-margin-top-huge {
  margin-top: 10rem; }

/******** THIS IS THE BUTTON EFFECTS ********/
/*This will remove the default of the link font color blue and if visited it will become violet*/
.btn {
  /*This is button down effect*/
  /*this will apply when you click*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /*simplest way to animate aside from @keyframe*/
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    /*When we want element to move up use negative, else positive*/
    /*x value, y value, blur value, color value*/
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    /*x value, y value, blur value, color value*/
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #55c57a;
    color: #fff; }
    .btn--green::after {
      background-color: #55c57a; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    /*It will automatically apply 0 percent before the animation starts*/
    animation-fill-mode: backwards; }

.btn-text {
  /*This will be applied when you click the button*/ }
  .btn-text:link, .btn-text:visited {
    font-size: 1.6rem;
    color: #55c57a;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid #55c57a;
    padding: 3px;
    transition: all .2s; }
  .btn-text:hover {
    background-color: #55c57a;
    color: #fff;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
    /*Push down effect is negative*/ }
  .btn-text:active {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    transform: translateY(0);
    /*Push up effect is positive*/ }

.composition {
  position: relative;
  /*check the photo that are not hovered inside the composition block and decrease its size a bit*/ }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    /*This will make photos at to top of the other/overlap*/
    /*This will reference the position to its parent element which is compositon and that should be relative*/
    position: absolute;
    z-index: 10;
    transition: all .2s;
    /*This will give space between the border/outline*/
    outline-offset: 2rem; }
    .composition__photo-p1 {
      left: 0;
      top: -2rem; }
    .composition__photo-p2 {
      right: 0;
      top: 2rem; }
    .composition__photo-p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      /*enlarge effect*/
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20;
      /*This will be the overlapping effect*/ }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 3.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: all .3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    /*THIS IS THE GRADIENT TEXT EFFECT*/
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  /*The below code is very important in rotate transition, it should be 1500px up*/
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 50rem; }
  .card__side {
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    border-radius: 3px;
    /*this code below hides if the child overflow the parent*/
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    /*The below code is commonly used in fixing transitions, It will hide the back part of the element*/
    backface-visibility: hidden; }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(-180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    /*The below code is new feature of CSS which blends element or images, NOT supported in IE and Edge*/
    background-blend-mode: screen;
    /*This below code is to make clip path compatible to other browser*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    /*It will apply all declarations that we have in the selector (ex. padding) to all of the boxes that are created by the element*/
    /*You need to add the webkit to be supported in CHROME*/
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__detail {
    padding: 3rem; }
    .card__detail ul {
      list-style: none;
      width: 80%;
      /*this below code will center the block elem inside a block elem*/
      margin: 0 auto; }
      .card__detail ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__detail ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg); }
  .story__shape {
    width: 15rem;
    height: 15rem;
    /*FLOAT only works when the element has height and width*/
    float: left;
    /*	1. Radius of the circle
			2. Center of the circle horizontally and vertically
		*/
    -webkit-shape-outside: circle(50% at 50% 50%);
    /*This is for IE, Edge and Mozilla*/
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    position: relative; }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    backface-visibility: hidden;
    transition: all .5s; }
  .story__text {
    transform: skewX(12deg); }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15;
  overflow: hidden; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    /*This will make the element (Ex. Video) occupy the whole parent element while maintaining its aspect ratio*/
    object-fit: cover; }

.header {
  height: 95vh;
  /*means 95% of the viewport height*/
  /*The below coloring method is only avaiable in SASS*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /*since we are at the css folder, we need to move 1 step backward on the directory using ".."*/
  background-size: cover;
  /*the size will be fit based on the viewport*/
  background-position: top;
  /*this will focus to this position (top, center, bottom etc.) when you resize*/
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*reference: https://bennettfeely.com/clippy/*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*reference: https://bennettfeely.com/clippy/*/
  position: relative; }
  .header__logo-box {
    /*this will reference the position of the parent element and that should be relative (in this case, the parent elem is the header*/
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__logo:hover {
    animation: spin 1s; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*This means that this element is not relative to parent element anymore but to itself, 50% is make it in the middle no start with 50% of the parent element*/
    text-align: center; }

.row {
  /*max-width means that if we have enough available space, it will have the width that we specified
	if NOT it will simply fill the 100% of the available space*/
  max-width: 114rem;
  /*This is 1140px wide*/
  margin: 0 auto;
  /*This is the trick use to center block elements inside block element*/
  /*PSEUDO-CLASS that Selects everything except from last-child*/
  /*This will select all classes that start(^) with col-*/ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) /2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.section-about {
  background-color: #efefef;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  margin-top: -10rem;
  transform: skewY(-7deg);
  /*This will select all the direct children/the first child ONLY*/
  /*"& * " -> is different bcoz it will select all the child*/ }
  .section-features > * {
    /*The only direct element here is the row*/
    transform: skewY(7deg); }

.section-tours {
  background-color: #efefef;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem; }

.section-stories {
  padding: 15rem 0;
  position: relative; }
